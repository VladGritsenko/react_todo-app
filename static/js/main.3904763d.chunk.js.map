{"version":3,"sources":["Components/TodoItem/TodoItem.js","Components/TodoList/TodoList.js","Components/TodoHeader/TodoHeader.js","Components/Footer/Footer.js","App.js","index.js"],"names":["TodoItem","_ref","handleRemove","id","todo","handleCheckBox","react_default","a","createElement","className","completed","onChange","checked","type","concat","htmlFor","text","onClick","TodoList","todos","map","Components_TodoItem_TodoItem","TodoHeader","handleChange","handleSubmit","value","onSubmit","placeholder","Footer","handleActiveFilter","activeFilter","handleClearCompleted","style","display","filter","length","href","some","App","state","tempValue","event","_this","setState","target","preventDefault","trim","uuid","v4","prevState","Object","toConsumableArray","handleClickAll","_objectSpread","this","_this$state","filteredTodos","Components_TodoHeader_TodoHeader","every","Components_TodoList_TodoList","Components_Footer_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3904763d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({\n  handleRemove,\n  id,\n  todo,\n  handleCheckBox,\n}) => (\n  <li className={todo.completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        onChange={() => handleCheckBox(id)}\n        checked={todo.completed}\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={`todo-${id}`}\n      />\n      <label htmlFor={`todo-${id}`}>\n        {todo.text}\n      </label>\n      <button\n        onClick={() => handleRemove(id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  handleRemove: PropTypes.func.isRequired,\n  handleCheckBox: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  handleRemove,\n  todos,\n  handleCheckBox,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        handleRemove={handleRemove}\n        handleCheckBox={handleCheckBox}\n        todo={todo}\n        id={todo.id}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoHeader = ({\n  handleChange,\n  handleSubmit,\n  value,\n}) => {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={value}\n          onChange={handleChange}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n\nTodoHeader.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default TodoHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  todos,\n  handleActiveFilter,\n  activeFilter,\n  handleClearCompleted,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.completed).length}\n      {' '}\n      items left\n    </span>\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={activeFilter === 'all' ? 'selected' : ''}\n          onClick={() => handleActiveFilter('all')}\n        >\n          All\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/active\"\n          className={activeFilter === 'active' ? 'selected' : ''}\n          onClick={() => handleActiveFilter('active')}\n        >\n          Active\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/completed\"\n          className={activeFilter === 'completed' ? 'selected' : ''}\n          onClick={() => handleActiveFilter('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n    {todos.some(todo => todo.completed)\n      && <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={handleClearCompleted}\n      >\n        Clear completed\n      </button>\n    }\n  </footer>\n);\n\nFooter.propTypes = {\n  handleActiveFilter: PropTypes.func.isRequired,\n  activeFilter: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport uuid from 'uuid';\nimport TodoList from './Components/TodoList/TodoList';\nimport TodoHeader from './Components/TodoHeader/TodoHeader';\nimport Footer from './Components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    tempValue: '',\n    activeFilter: 'all',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      tempValue: event.target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.tempValue.trim().length > 0) {\n      const id = uuid.v4();\n\n      this.setState(prevState => ({\n        todos: [...prevState.todos, {\n          text: prevState.tempValue,\n          completed: false,\n          id,\n        }],\n        tempValue: '',\n      }));\n    }\n  }\n\n  handleCheckBox = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (id === todo.id\n        ? {\n            text: todo.text,\n            id: todo.id,\n            completed: !todo.completed,\n          }\n        : todo\n      )),\n    }));\n  };\n\n  handleRemove = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => id !== todo.id),\n    }));\n  }\n\n  handleActiveFilter = (activeFilter) => {\n    this.setState({\n      activeFilter,\n    });\n  }\n\n  handleClearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  handleClickAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.some(todo => !todo.completed)\n        ? prevState.todos.map(todo => ({ ...todo, completed: true }))\n        : prevState.todos.map(todo => ({ ...todo, completed: !todo.completed })),\n    }));\n  }\n\n  render() {\n    const {\n      handleChange,\n      handleSubmit,\n      handleClickAll,\n      handleCheckBox,\n      handleRemove,\n      handleClearCompleted,\n      handleActiveFilter,\n    } = this;\n\n    const {\n      todos,\n      tempValue,\n      activeFilter,\n    } = this.state;\n\n    let filteredTodos = [];\n\n    switch (activeFilter) {\n      case 'active':\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        filteredTodos = todos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <TodoHeader\n          value={tempValue}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={todos.every(todo => todo.completed)}\n            onClick={handleClickAll}\n          />\n          { todos.length === 0 ||\n            <label htmlFor=\"toggle-all\">\n              Mark all as complete\n            </label>\n          }\n          <TodoList\n            todos={filteredTodos}\n            handleCheckBox={handleCheckBox}\n            handleRemove={handleRemove}\n          />\n        </section>\n        {todos.length > 0\n          && <Footer\n            handleClearCompleted={handleClearCompleted}\n            activeFilter={activeFilter}\n            handleActiveFilter={handleActiveFilter}\n            todos={todos}\n          />\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}